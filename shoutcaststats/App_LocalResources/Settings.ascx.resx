<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Aarsys Shoutcast Stats Settings</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>About Aarsys Shoutcast Stats Settings</value>
  </data>
  <data name="lblSC_IP.Help" xml:space="preserve">
    <value>Add your IP or domain to your Shoutcast server.</value>
  </data>
  <data name="lblSC_IP.Text" xml:space="preserve">
    <value>IP or Domain</value>
  </data>
  <data name="lblSC_Password.Help" xml:space="preserve">
    <value>Add the admin Password for your Shoutcast server.</value>
  </data>
  <data name="lblSC_Password.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="lblSC_Port.Help" xml:space="preserve">
    <value>Add the port your Shoutcast server uses.</value>
  </data>
  <data name="lblSC_Port.Text" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="lblSC_AIM.Help" xml:space="preserve">
    <value>Creates a AIM messenger link from the Shoutcast Encoder setting "AIM" if enabled</value>
  </data>
  <data name="lblSC_AIM.Text" xml:space="preserve">
    <value>AIM</value>
  </data>
  <data name="lblSC_AOL.Help" xml:space="preserve">
    <value>Creates a AOL messenger link from Shoutcast Encoder settings "AIM" if enabled.</value>
  </data>
  <data name="lblSC_AOL.Text" xml:space="preserve">
    <value>AOL</value>
  </data>
  <data name="lblSC_ICQ.Help" xml:space="preserve">
    <value>Creates a ICQ messenger Link from Shoutcast Encoders settings "ICQ" if enabled.</value>
  </data>
  <data name="SC_ICQCheckBox.Text" xml:space="preserve">
    <value>ICQ</value>
  </data>
  <data name="lblSC_MSN.Help" xml:space="preserve">
    <value>If enabled, creates a Live messenger link from Shoutcast Encoders setting "ICQ".</value>
  </data>
  <data name="lblSC_MSN.Text" xml:space="preserve">
    <value>MSN</value>
  </data>
  <data name="lblSC_Yahoo.Help" xml:space="preserve">
    <value>If enabled, creates a Yahoo messenger link from Shoutcast Encoders setting "ICQ".</value>
  </data>
  <data name="lblSC_Yahoo.Text" xml:space="preserve">
    <value>Yahoo</value>
  </data>
  <data name="lblSC_ICQ.Text" xml:space="preserve">
    <value>ICQ</value>
  </data>
  <data name="lblSC_MSG.Help" xml:space="preserve">
    <value>Add with the Shoutcast server setting "AIM" a DJ Chat link for AIM and/or AOL. &lt;br /&gt;
Add a ICQ or MSN and/or Yahoo Link with the "ICQ" setting of your Shoutcast Server.</value>
  </data>
  <data name="lblSC_MSG.Text" xml:space="preserve">
    <value>Add Chat link to chat with the DJ using the AIM or ICQ Shoutcast settings.</value>
  </data>
  <data name="lbliTunes.Help" xml:space="preserve">
    <value>Added a start link for iTunes and QuickTime &lt;br/&gt; Note: &lt;br /&gt;QuickTime did not support AAC streams!</value>
  </data>
  <data name="lbliTunes.Text" xml:space="preserve">
    <value>iTunes / QuickTime</value>
  </data>
  <data name="lblMediaPlayer.Help" xml:space="preserve">
    <value>Added a start link for Media Player</value>
  </data>
  <data name="lblMediaPlayer.Text" xml:space="preserve">
    <value>Media Player</value>
  </data>
  <data name="lblPlayer.Help" xml:space="preserve">
    <value>If enabled you provides start links to open the stream on different players</value>
  </data>
  <data name="lblPlayer.Text" xml:space="preserve">
    <value>Select Players you want to provide to your costumers</value>
  </data>
  <data name="lblRealPlayer.Help" xml:space="preserve">
    <value>added a start link for Real Player</value>
  </data>
  <data name="lblRealPlayer.Text" xml:space="preserve">
    <value>Real Player</value>
  </data>
  <data name="lblSC_Bitrate.Help" xml:space="preserve">
    <value>Adds the current Bitrate</value>
  </data>
  <data name="lblSC_Bitrate.Text" xml:space="preserve">
    <value>Bitrate</value>
  </data>
  <data name="lblSC_Content.Help" xml:space="preserve">
    <value>Adds the current Content Type</value>
  </data>
  <data name="lblSC_Content.Text" xml:space="preserve">
    <value>Content Type</value>
  </data>
  <data name="lblSC_CurrentListeners.Help" xml:space="preserve">
    <value>Gets the Current Listeners of teh Shoutcast server</value>
  </data>
  <data name="lblSC_CurrentListeners.Text" xml:space="preserve">
    <value>Current Listeners</value>
  </data>
  <data name="lblSC_DJ.Help" xml:space="preserve">
    <value>Addes the current DJ name</value>
  </data>
  <data name="lblSC_DJ.Text" xml:space="preserve">
    <value>Current DJ name</value>
  </data>
  <data name="lblSC_Features.Help" xml:space="preserve">
    <value>Here you can select the features you want to provied to your customers.</value>
  </data>
  <data name="lblSC_Features.Text" xml:space="preserve">
    <value>Select features you want to view to your vistitors</value>
  </data>
  <data name="lblSC_genre.Help" xml:space="preserve">
    <value>Gets the Genre of the Shoutcast Server</value>
  </data>
  <data name="lblSC_genre.Text" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="lblSC_MaxListeners.Help" xml:space="preserve">
    <value>Gets the max. Listeners of the Shoutcast server</value>
  </data>
  <data name="lblSC_MaxListeners.Text" xml:space="preserve">
    <value>Max. Listeners</value>
  </data>
  <data name="lblSC_PeakListeners.Help" xml:space="preserve">
    <value>Gets the Listeners Peak of the Shoutcast server</value>
  </data>
  <data name="lblSC_PeakListeners.Text" xml:space="preserve">
    <value>Listeners Peak</value>
  </data>
  <data name="lblSC_Song.Help" xml:space="preserve">
    <value>Adds the current Title in a marquee</value>
  </data>
  <data name="lblSC_Song.Text" xml:space="preserve">
    <value>Current Song</value>
  </data>
  <data name="lblSC_Station.Help" xml:space="preserve">
    <value>Gets the Station name of the Shoutcast server</value>
  </data>
  <data name="lblSC_Station.Text" xml:space="preserve">
    <value>Station name</value>
  </data>
  <data name="lblWinamp.Help" xml:space="preserve">
    <value>Added a start link for Winamp Player</value>
  </data>
  <data name="lblWinamp.Text" xml:space="preserve">
    <value>Winamp Player</value>
  </data>
  <data name="lblSC_PlayerText.Help" xml:space="preserve">
    <value>If selected, a Start your Player message is viewed over the Player links</value>
  </data>
  <data name="lblSC_PlayerText.Text" xml:space="preserve">
    <value>View Start Player Lable</value>
  </data>
  <data name="lblPlayerText.Help" xml:space="preserve">
    <value>Activates a Note Start Your Player over the Player buttons.</value>
  </data>
  <data name="lblPlayerText.Text" xml:space="preserve">
    <value>Start your Player</value>
  </data>
</root>